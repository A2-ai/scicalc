[{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 scicalc authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/articles/scicalc.html","id":"scicalc","dir":"Articles","previous_headings":"","what":"Scicalc","title":"scicalc","text":"Scicalc package functions commonly used A2-Ai. hope package ease data assembly allow reproducible code across analysts projects. way complete encompassing, hope good start. Please let us know additional functions include!","code":"library(scicalc)"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/articles/scicalc.html","id":"reading-in-data","dir":"Articles","previous_headings":"Scicalc","what":"Reading in data","title":"scicalc","text":"’ll first try read data ~/inst/extdata/data/source - R packages extra files go inst directory, can pretend just like Project starter data/source directory. contrived example, several different file types source data representing different SDTM domains. well test.txt file. can use read_file_with_hash function read files source directory. creating read_file_type_with_hash functions script! hashes come digest::digest’s default algorithm md5, can alter supplying algo = 'blake3' read_file_with_hash function. can see different file type read read_file_with_hash saved raw_data. also got warning test.txt file currently supported. file types commonly read want print hash besides csv, parquet, sas7bdat please reach can add functionality! Behind scenes read_file_with_hash extension file determined corresponding function read_parquet_with_hash called. can call either, recommend using general read_file_with_hash.","code":"data_source <- file.path(here::here(), \"inst\", \"extdata\", \"data\", \"source\") if (!dir.exists(data_source)) {   fs::dir_create(data_source) }  list.files(data_source) #> [1] \"dm.sas7bdat\" \"lb.csv\"      \"pc.parquet\"  \"test.txt\"    \"vs.parquet\" raw_data <- purrr::map(   list.files(data_source, full.names = TRUE),   scicalc::read_file_with_hash) %>%    purrr::set_names(tools::file_path_sans_ext(list.files(data_source))) #> dm.sas7bdat: 788af851bbf9aeee71102d3b1abe9716 #> lb.csv: b5e4122d4df0ec79401eb6bb0d2d0d85 #> Rows: 12 Columns: 11 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (4): CREATU, CYSTCU, ASTU, BILIU #> dbl (7): ID, CREAT, CYSTC, AST, ULNAST, BILI, ULNBILI #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> pc.parquet: 9331b2932087bb4bb11fb680f993d2d9 #> Warning in .f(.x[[i]], ...): File type: txt not currently supported #> vs.parquet: ffa9de2ebf03e2b343c696331055abfb raw_data <- purrr::map(   list.files(data_source, full.names = TRUE),   scicalc::read_file_with_hash, algo = \"blake3\") %>%    purrr::set_names(tools::file_path_sans_ext(list.files(data_source))) #> dm.sas7bdat: ec4716c1222c687d6df000c355c73696ef9d3fc856dd77e9de6035c2a7b48ec1 #> lb.csv: 577007ecd6292a122b6fdf48add5112ba0976d43db617bb087d8fca07da5b126 #> Rows: 12 Columns: 11 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (4): CREATU, CYSTCU, ASTU, BILIU #> dbl (7): ID, CREAT, CYSTC, AST, ULNAST, BILI, ULNBILI #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> pc.parquet: 018a9afea928fb431bfe422107a70c861c8840b2b0011b2b95eedaaedbb8db3a #> Warning in .f(.x[[i]], ...): File type: txt not currently supported #> vs.parquet: b52fe4605508cf6e4a098c8801c930553ee2cd2ebb3e1a0542cfa58438a2021e names(raw_data) #> [1] \"dm\"   \"lb\"   \"pc\"   \"test\" \"vs\""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/articles/scicalc.html","id":"simple-data-analysis","dir":"Articles","previous_headings":"Scicalc","what":"Simple data analysis","title":"scicalc","text":"Let’s bmi bsa caclulations data vs domain Now can verify lab units moving - remember contrived dataset, workflow somewhat similar. Now can use lab data calculate hepatic function. Now ’ll need demographics needed Creatinine clearance, estimated glomerular filtration rate, renal function.","code":"df <- raw_data$pc  df <- df %>%    dplyr::mutate(.data = raw_data$vs,     BBMI = scicalc::bbmi(WEIGHT, HEIGHT),     DBSA = scicalc::bsa(WEIGHT, HEIGHT),     MBSA = scicalc::bsa(WEIGHT, HEIGHT, method = \"mosteller\")) df #> # A tibble: 12 × 8 #>    ID    HEIGHT WEIGHT    DV  NTLD  BBMI  DBSA  MBSA #>    <fct>  <dbl>  <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #>  1 1        174     70    10  0     23.1  1.84  1.84 #>  2 1        174     70   150  0.25  23.1  1.84  1.84 #>  3 1        174     70    70  1     23.1  1.84  1.84 #>  4 1        174     70     9  8     23.1  1.84  1.84 #>  5 2        201     80     7  0     19.8  2.16  2.11 #>  6 2        201     80   140  0.25  19.8  2.16  2.11 #>  7 2        201     80    60  1     19.8  2.16  2.11 #>  8 2        201     80     7  8     19.8  2.16  2.11 #>  9 3        190     75    11  0     20.8  2.02  1.99 #> 10 3        190     75   156  0.25  20.8  2.02  1.99 #> 11 3        190     75    70  1     20.8  2.02  1.99 #> 12 3        190     75     7  8     20.8  2.02  1.99 dflb <- raw_data$lb %>%    dplyr::select(c(\"ID\", \"CREAT\", \"CYSTC\", \"AST\", \"BILI\", )) %>%    dplyr::distinct() %>%    tidyr::pivot_longer(cols = c(\"CREAT\", \"CYSTC\", \"AST\", \"BILI\"),                        names_to = \"LBTESTCD\", values_to = \"LBORRES\")  dfu <- raw_data$lb %>%   dplyr::select(c(\"ID\", \"CREATU\", \"CYSTCU\", \"ASTU\", \"BILIU\")) %>%    dplyr::distinct() %>%    tidyr::pivot_longer(cols = c(\"CREATU\", \"CYSTCU\", \"ASTU\", \"BILIU\"),                        names_to = \"LBTESTCDU\", values_to = \"LBORRESU\")   lb <- dflb %>%    dplyr::mutate(LBORRESU = dfu$LBORRESU)  lb #> # A tibble: 12 × 4 #>       ID LBTESTCD LBORRES LBORRESU #>    <dbl> <chr>      <dbl> <chr>    #>  1     1 CREAT        1   mg/dL    #>  2     1 CYSTC        0.4 mg/L     #>  3     1 AST         15   U/L      #>  4     1 BILI         0.8 mg/dL    #>  5     2 CREAT        4   mg/dL    #>  6     2 CYSTC        0.9 mg/L     #>  7     2 AST         29   U/L      #>  8     2 BILI         1.9 mg/dL    #>  9     3 CREAT        3   mg/dL    #> 10     3 CYSTC        0.7 mg/L     #> 11     3 AST         38   U/L      #> 12     3 BILI         1.1 mg/dL if (scicalc::check_for_unique_units(lb$LBTESTCD, lb$LBORRESU)) {   print(\"Units are 1:1!\") } else {   stop(\"Error with units!\") } #> [1] \"Units are 1:1!\" scicalc::get_unique_units_df(lb$LBTESTCD, lb$LBORRESU) #>   PARAM  UNIT #> 1 CREAT mg/dL #> 2 CYSTC  mg/L #> 3   AST   U/L #> 4  BILI mg/dL df <- df %>%    dplyr::mutate(.data = raw_data$lb,      BHFC = scicalc::bhfc(AST, ULNAST, BILI, ULNBILI),   ) df #> # A tibble: 12 × 19 #>    ID    CREAT CREATU CYSTC CYSTCU   AST ULNAST  BILI ULNBILI ASTU  BILIU HEIGHT #>    <fct> <dbl> <chr>  <dbl> <chr>  <dbl>  <dbl> <dbl>   <dbl> <chr> <chr>  <dbl> #>  1 1         1 mg/dL    0.4 mg/L      15     33   0.8     1.2 U/L   mg/dL    174 #>  2 1         1 mg/dL    0.4 mg/L      15     33   0.8     1.2 U/L   mg/dL    174 #>  3 1         1 mg/dL    0.4 mg/L      15     33   0.8     1.2 U/L   mg/dL    174 #>  4 1         1 mg/dL    0.4 mg/L      15     33   0.8     1.2 U/L   mg/dL    174 #>  5 2         4 mg/dL    0.9 mg/L      29     33   1.9     1.2 U/L   mg/dL    201 #>  6 2         4 mg/dL    0.9 mg/L      29     33   1.9     1.2 U/L   mg/dL    201 #>  7 2         4 mg/dL    0.9 mg/L      29     33   1.9     1.2 U/L   mg/dL    201 #>  8 2         4 mg/dL    0.9 mg/L      29     33   1.9     1.2 U/L   mg/dL    201 #>  9 3         3 mg/dL    0.7 mg/L      38     33   1.1     1.2 U/L   mg/dL    190 #> 10 3         3 mg/dL    0.7 mg/L      38     33   1.1     1.2 U/L   mg/dL    190 #> 11 3         3 mg/dL    0.7 mg/L      38     33   1.1     1.2 U/L   mg/dL    190 #> 12 3         3 mg/dL    0.7 mg/L      38     33   1.1     1.2 U/L   mg/dL    190 #> # ℹ 7 more variables: WEIGHT <dbl>, DV <dbl>, NTLD <dbl>, BBMI <dbl>, #> #   DBSA <dbl>, MBSA <dbl>, BHFC <dbl> df <- df %>%    dplyr::mutate(.data = raw_data$dm,      CRCL = scicalc::crcl(scicalc::is_female(SEX), AGE, CREAT, WEIGHT),     BRFC = scicalc::brfc(CRCL),          ckdepi_2009_egfr = scicalc::egfr(       sexf = scicalc::is_female(SEX),        raceb = scicalc::is_black(RACE),        age = AGE,        creat = CREAT,       method = \"CKDEPI 2009\"),     ckdepi_2021_egfr = scicalc::egfr(       sexf = scicalc::is_female(SEX),        age = AGE,        creat = CREAT,        cystc = CYSTC,        method = \"CKDEPI 2021\"),     mdrd_egfr = scicalc::egfr(       sexf = scicalc::is_female(SEX),        raceb = scicalc::is_black(RACE),        age = AGE,        creat = CREAT,       method = \"MDRD\"),     schwartz_egfr = scicalc::egfr(       height = HEIGHT,       creat = CREAT,       method = \"Schwartz\"     )   )  df #> # A tibble: 12 × 28 #>    ID    SEX   RACE    AGE CREAT CREATU CYSTC CYSTCU   AST ULNAST  BILI ULNBILI #>    <fct> <chr> <chr> <dbl> <dbl> <chr>  <dbl> <chr>  <dbl>  <dbl> <dbl>   <dbl> #>  1 1     F     WHITE    24     1 mg/dL    0.4 mg/L      15     33   0.8     1.2 #>  2 1     F     WHITE    24     1 mg/dL    0.4 mg/L      15     33   0.8     1.2 #>  3 1     F     WHITE    24     1 mg/dL    0.4 mg/L      15     33   0.8     1.2 #>  4 1     F     WHITE    24     1 mg/dL    0.4 mg/L      15     33   0.8     1.2 #>  5 2     M     BLACK    22     4 mg/dL    0.9 mg/L      29     33   1.9     1.2 #>  6 2     M     BLACK    22     4 mg/dL    0.9 mg/L      29     33   1.9     1.2 #>  7 2     M     BLACK    22     4 mg/dL    0.9 mg/L      29     33   1.9     1.2 #>  8 2     M     BLACK    22     4 mg/dL    0.9 mg/L      29     33   1.9     1.2 #>  9 3     F     ASIAN    35     3 mg/dL    0.7 mg/L      38     33   1.1     1.2 #> 10 3     F     ASIAN    35     3 mg/dL    0.7 mg/L      38     33   1.1     1.2 #> 11 3     F     ASIAN    35     3 mg/dL    0.7 mg/L      38     33   1.1     1.2 #> 12 3     F     ASIAN    35     3 mg/dL    0.7 mg/L      38     33   1.1     1.2 #> # ℹ 16 more variables: ASTU <chr>, BILIU <chr>, HEIGHT <dbl>, WEIGHT <dbl>, #> #   DV <dbl>, NTLD <dbl>, BBMI <dbl>, DBSA <dbl>, MBSA <dbl>, BHFC <dbl>, #> #   CRCL <dbl>, BRFC <dbl>, ckdepi_2009_egfr <dbl>, ckdepi_2021_egfr <dbl>, #> #   mdrd_egfr <dbl>, schwartz_egfr <dbl>"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/articles/scicalc.html","id":"writting-data","dir":"Articles","previous_headings":"Scicalc","what":"Writting data","title":"scicalc","text":"can use write_file_with_hash write parquet files (highly recommend write data parquet unless specific need file type). just need supply path file directory file written exist, function create directories needed path. function won’t let us overwrite file unless supply overwrite = TRUE. Like read_file_with_hash can choose algorithm use digest.","code":"data_derived <- file.path(here::here(), \"inst\", \"extdata\", \"data\", \"derived\") if (!file.exists(file.path(data_derived, \"pk_data_v01.parquet\"))) {   scicalc::write_file_with_hash(     df, file.path(data_derived, \"pk_data_v01.parquet\"), algo = \"blake3\")   } else {   print(\"Overwriting data!\")   scicalc::write_file_with_hash(     df, file.path(data_derived, \"pk_data_v01.parquet\"), overwrite = TRUE, algo = \"blake3\") } #> [1] \"Overwriting data!\" #> /home/runner/work/scicalc/scicalc/inst/extdata/data/derived/pk_data_v01.parquet: b991f17ac1ccd95511497cd36bf22dcc0b6e8ea1e10731cee1efba89e8d82d93"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/articles/scicalc.html","id":"reading-in-derived-data","dir":"Articles","previous_headings":"Scicalc","what":"Reading in derived data","title":"scicalc","text":"Now want read derived data verify data think can use read_hashed_file. function let ingest data hash supply matches hash contents file. ’ve supplied blake3 hash match md5 hash digest uses default. two options, tell read_hashed_file use algo = 'blake3' supply md5 hash. updated algo argument works: giving md5 hash works","code":"hash <- digest::digest(file.path(data_derived, \"pk_data_v01.parquet\")) # This is a hash of the string to the file type so it will not match the hash for contents of the file. print(hash) #> [1] \"16719721ab4cf192479f02ae956dc51b\" #This hash is incorrect so the function errors if (file.exists(file.path(data_derived, \"pk_data_v01.parquet\"))) {   testthat::expect_error(scicalc::read_hashed_file(file.path(data_derived, \"pk_data_v01.parquet\"), hash)) } correct_hash <- digest::digest(file = file.path(data_derived, \"pk_data_v01.parquet\"), algo = \"blake3\") print(correct_hash) #> [1] \"b991f17ac1ccd95511497cd36bf22dcc0b6e8ea1e10731cee1efba89e8d82d93\" data <- scicalc::read_hashed_file(   file.path(data_derived, \"pk_data_v01.parquet\"),   algo = \"blake3\",   correct_hash) data #> # A tibble: 12 × 28 #>    ID    SEX   RACE    AGE CREAT CREATU CYSTC CYSTCU   AST ULNAST  BILI ULNBILI #>    <fct> <chr> <chr> <dbl> <dbl> <chr>  <dbl> <chr>  <dbl>  <dbl> <dbl>   <dbl> #>  1 1     F     WHITE    24     1 mg/dL    0.4 mg/L      15     33   0.8     1.2 #>  2 1     F     WHITE    24     1 mg/dL    0.4 mg/L      15     33   0.8     1.2 #>  3 1     F     WHITE    24     1 mg/dL    0.4 mg/L      15     33   0.8     1.2 #>  4 1     F     WHITE    24     1 mg/dL    0.4 mg/L      15     33   0.8     1.2 #>  5 2     M     BLACK    22     4 mg/dL    0.9 mg/L      29     33   1.9     1.2 #>  6 2     M     BLACK    22     4 mg/dL    0.9 mg/L      29     33   1.9     1.2 #>  7 2     M     BLACK    22     4 mg/dL    0.9 mg/L      29     33   1.9     1.2 #>  8 2     M     BLACK    22     4 mg/dL    0.9 mg/L      29     33   1.9     1.2 #>  9 3     F     ASIAN    35     3 mg/dL    0.7 mg/L      38     33   1.1     1.2 #> 10 3     F     ASIAN    35     3 mg/dL    0.7 mg/L      38     33   1.1     1.2 #> 11 3     F     ASIAN    35     3 mg/dL    0.7 mg/L      38     33   1.1     1.2 #> 12 3     F     ASIAN    35     3 mg/dL    0.7 mg/L      38     33   1.1     1.2 #> # ℹ 16 more variables: ASTU <chr>, BILIU <chr>, HEIGHT <dbl>, WEIGHT <dbl>, #> #   DV <dbl>, NTLD <dbl>, BBMI <dbl>, DBSA <dbl>, MBSA <dbl>, BHFC <dbl>, #> #   CRCL <dbl>, BRFC <dbl>, ckdepi_2009_egfr <dbl>, ckdepi_2021_egfr <dbl>, #> #   mdrd_egfr <dbl>, schwartz_egfr <dbl> md5_hash <- digest::digest(file = file.path(data_derived, \"pk_data_v01.parquet\")) print(md5_hash) #> [1] \"aeb8b6110fc22b6d0c30af2a840c0917\" data <- scicalc::read_hashed_file(   file.path(data_derived, \"pk_data_v01.parquet\"),    md5_hash) data #> # A tibble: 12 × 28 #>    ID    SEX   RACE    AGE CREAT CREATU CYSTC CYSTCU   AST ULNAST  BILI ULNBILI #>    <fct> <chr> <chr> <dbl> <dbl> <chr>  <dbl> <chr>  <dbl>  <dbl> <dbl>   <dbl> #>  1 1     F     WHITE    24     1 mg/dL    0.4 mg/L      15     33   0.8     1.2 #>  2 1     F     WHITE    24     1 mg/dL    0.4 mg/L      15     33   0.8     1.2 #>  3 1     F     WHITE    24     1 mg/dL    0.4 mg/L      15     33   0.8     1.2 #>  4 1     F     WHITE    24     1 mg/dL    0.4 mg/L      15     33   0.8     1.2 #>  5 2     M     BLACK    22     4 mg/dL    0.9 mg/L      29     33   1.9     1.2 #>  6 2     M     BLACK    22     4 mg/dL    0.9 mg/L      29     33   1.9     1.2 #>  7 2     M     BLACK    22     4 mg/dL    0.9 mg/L      29     33   1.9     1.2 #>  8 2     M     BLACK    22     4 mg/dL    0.9 mg/L      29     33   1.9     1.2 #>  9 3     F     ASIAN    35     3 mg/dL    0.7 mg/L      38     33   1.1     1.2 #> 10 3     F     ASIAN    35     3 mg/dL    0.7 mg/L      38     33   1.1     1.2 #> 11 3     F     ASIAN    35     3 mg/dL    0.7 mg/L      38     33   1.1     1.2 #> 12 3     F     ASIAN    35     3 mg/dL    0.7 mg/L      38     33   1.1     1.2 #> # ℹ 16 more variables: ASTU <chr>, BILIU <chr>, HEIGHT <dbl>, WEIGHT <dbl>, #> #   DV <dbl>, NTLD <dbl>, BBMI <dbl>, DBSA <dbl>, MBSA <dbl>, BHFC <dbl>, #> #   CRCL <dbl>, BRFC <dbl>, ckdepi_2009_egfr <dbl>, ckdepi_2021_egfr <dbl>, #> #   mdrd_egfr <dbl>, schwartz_egfr <dbl>"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Matthew Smith. Author, maintainer. Jenna Johnson. Author. Devin Pastoor. Author. Wesley Cummings. Contributor. Emily Schapiro. Contributor. Ryan Crass. Contributor.","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Smith M, Johnson J, Pastoor D (2024). scicalc: Package (One Line, Title Case). R package version 0.0.0.9000, https://potential-broccoli-9pe6wkn.pages.github.io/.","code":"@Manual{,   title = {scicalc: What the Package Does (One Line, Title Case)},   author = {Matthew Smith and Jenna Johnson and Devin Pastoor},   year = {2024},   note = {R package version 0.0.0.9000},   url = {https://potential-broccoli-9pe6wkn.pages.github.io/}, }"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/index.html","id":"scicalc","dir":"","previous_headings":"","what":"What the Package Does (One Line, Title Case)","title":"What the Package Does (One Line, Title Case)","text":"goal scicalc …","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"What the Package Does (One Line, Title Case)","text":"can install development version scicalc GitHub :","code":"# install.packages(\"devtools\")"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"What the Package Does (One Line, Title Case)","text":"basic example shows solve common problem:","code":"library(scicalc) ## basic example code"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/bbmi.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates Baseline Body Mass Index based on Weight and Height — bbmi","title":"Calculates Baseline Body Mass Index based on Weight and Height — bbmi","text":"Calculates Baseline Body Mass Index based Weight Height","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/bbmi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates Baseline Body Mass Index based on Weight and Height — bbmi","text":"","code":"bbmi(weight, height)"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/bbmi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates Baseline Body Mass Index based on Weight and Height — bbmi","text":"weight weight subject (kg) height height subject (cm)","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/bbmi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates Baseline Body Mass Index based on Weight and Height — bbmi","text":"bBMI value (kg m^(-2))","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/bbmi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates Baseline Body Mass Index based on Weight and Height — bbmi","text":"","code":"b <- bbmi(80.56, 167)  df <- data.frame( \"WT\" = c(80.56, 71.53, 81.04, 70.17), \"HT\" = c(167, 161, 163, 164) ) df <- dplyr::mutate(df, bbmi = bbmi(WT, HT))"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/bhfc.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates hepatic function criteria — bhfc","title":"Calculates hepatic function criteria — bhfc","text":"Calculates hepatic function criteria","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/bhfc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates hepatic function criteria — bhfc","text":"","code":"bhfc(ast, ulnast, bili, ulnbili)"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/bhfc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates hepatic function criteria — bhfc","text":"ast Aspartate aminotransferase concentration (IU/L) ulnast Upper limit normal AST (IU/L), typically 33 bili bilirubin concentration (mg/dL) ulnbili Upper limit normal BILI (mg/dL), typically 1.2","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/bhfc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates hepatic function criteria — bhfc","text":"category hepatic function","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/bhfc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates hepatic function criteria — bhfc","text":"","code":"bhfc(15, 33, 0.6, 1.2) #> [1] 1  df <- data.frame(   \"ID\" = c(1, 1, 1, 1, 2, 2, 2, 2),   \"SEX\" = c(\"F\", \"F\", \"F\", \"F\", \"M\", \"M\", \"M\", \"M\"),   \"RACE\" = c(\"WHITE\", \"WHITE\", \"WHITE\", \"WHITE\", \"BLACK\", \"BLACK\", \"BLACK\", \"BLACK\"),   \"AGE\" = c(24, 24, 24, 24, 22, 22, 22, 22),   \"CREAT\" = c(1, 1, 1, 1, 4, 4, 4, 4),   \"WEIGHT\" = c(70, 70, 70, 70, 65, 65, 65, 65),   \"AST\" = c(15, 15, 15, 15, 23, 23, 23, 23),   \"ULNAST\" = c(33, 33, 33, 33, 33, 33, 33, 33),   \"BILI\" = c(1, 1, 1, 1, 0.4, 0.4, 0.4, 0.4),   \"ULNBILI\" = c(1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2) )  df <- df %>%   dplyr::group_by(ID) %>%   dplyr::mutate(BHFC = bhfc(AST, ULNAST, BILI, ULNBILI))"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/brfc.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates renal impairment categories based on CrCL — brfc","title":"Calculates renal impairment categories based on CrCL — brfc","text":"Calculates renal impairment categories based CrCL","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/brfc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates renal impairment categories based on CrCL — brfc","text":"","code":"brfc(crcl)"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/brfc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates renal impairment categories based on CrCL — brfc","text":"crcl creatinine clearance rate (mL/min)","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/brfc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates renal impairment categories based on CrCL — brfc","text":"integer renal impairment category","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/brfc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates renal impairment categories based on CrCL — brfc","text":"","code":"brfc(crcl(FALSE, 20, 10, 70)) #> [1] 3  df <- data.frame(   \"ID\" = c(1, 1, 1, 1, 2, 2, 2, 2),   \"SEX\" = c(\"F\", \"F\", \"F\", \"F\", \"M\", \"M\", \"M\", \"M\"),   \"RACE\" = c(\"WHITE\", \"WHITE\", \"WHITE\", \"WHITE\", \"BLACK\", \"BLACK\", \"BLACK\", \"BLACK\"),   \"AGE\" = c(24, 24, 24, 24, 22, 22, 22, 22),   \"CREAT\" = c(1, 1, 1, 1, 4, 4, 4, 4),   \"WEIGHT\" = c(70, 70, 70, 70, 65, 65, 65, 65) )  df <- df %>%   dplyr::group_by(ID) %>%   dplyr::mutate(     CRCL = crcl(is_female(SEX), AGE, CREAT, WEIGHT),     BRFC = brfc(CRCL)   )"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/bsa.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates Body Surface Area based on Weight and Height using the method specified. Default is Dubois. — bsa","title":"Calculates Body Surface Area based on Weight and Height using the method specified. Default is Dubois. — bsa","text":"Calculates Body Surface Area based Weight Height using method specified. Default Dubois.","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/bsa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates Body Surface Area based on Weight and Height using the method specified. Default is Dubois. — bsa","text":"","code":"bsa(weight, height, method = \"Dubois\")"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/bsa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates Body Surface Area based on Weight and Height using the method specified. Default is Dubois. — bsa","text":"weight weight subject (kg) height height subject (cm) method String dictate equation use. Dubois Mosteller.","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/bsa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates Body Surface Area based on Weight and Height using the method specified. Default is Dubois. — bsa","text":"bsa (m^2)","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/bsa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates Body Surface Area based on Weight and Height using the method specified. Default is Dubois. — bsa","text":"","code":"bsa(70, 170) #> [1] 1.809708 bsa(70, 170, method = \"Mosteller\") #> [1] 1.818119 bsa(70, 170, method = \"Dubois\") #> [1] 1.809708"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/check_for_unique_units.html","id":null,"dir":"Reference","previous_headings":"","what":"Gives a TRUE/FALSE for if the Parameters have only 1 associated unit — check_for_unique_units","title":"Gives a TRUE/FALSE for if the Parameters have only 1 associated unit — check_for_unique_units","text":"Gives TRUE/FALSE Parameters 1 associated unit","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/check_for_unique_units.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gives a TRUE/FALSE for if the Parameters have only 1 associated unit — check_for_unique_units","text":"","code":"check_for_unique_units(params, units)"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/check_for_unique_units.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gives a TRUE/FALSE for if the Parameters have only 1 associated unit — check_for_unique_units","text":"params column dataset lab parameters units column dataset units associated parameters","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/check_for_unique_units.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gives a TRUE/FALSE for if the Parameters have only 1 associated unit — check_for_unique_units","text":"boolean","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/check_for_unique_units.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gives a TRUE/FALSE for if the Parameters have only 1 associated unit — check_for_unique_units","text":"","code":"df <- data.frame(   PARAM = c(     \"ALB\",\"ALT\",\"AST\",\"CR\",\"TBIL\",     \"ALB\",\"CR\",\"TBIL\",\"ALT\",\"AST\"),   UNIT = c(     \"g/L\",\"U/L\",\"U/L\",\"umol/L\",\"umol/L\",     \"U/L\",\"μmol/L\",\"μmol/L\",\"IU/L\",\"IU/L\") ) check_for_unique_units <- get_unique_units_df(df$PARAM, df$UNIT)"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/ckdepi_2009_egfr.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates Estimated Glomerular Filtration Rate based on Sex, Race, Age, and Creatinine levels based on the CKDEPI 2009 equation — ckdepi_2009_egfr","title":"Calculates Estimated Glomerular Filtration Rate based on Sex, Race, Age, and Creatinine levels based on the CKDEPI 2009 equation — ckdepi_2009_egfr","text":"Calculates Estimated Glomerular Filtration Rate based Sex, Race, Age, Creatinine levels based CKDEPI 2009 equation","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/ckdepi_2009_egfr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates Estimated Glomerular Filtration Rate based on Sex, Race, Age, and Creatinine levels based on the CKDEPI 2009 equation — ckdepi_2009_egfr","text":"","code":"ckdepi_2009_egfr(sexf, raceb, age, creat)"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/ckdepi_2009_egfr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates Estimated Glomerular Filtration Rate based on Sex, Race, Age, and Creatinine levels based on the CKDEPI 2009 equation — ckdepi_2009_egfr","text":"sexf boolean value sex Female: TRUE, Male: FALSE raceb boolean value Race == Black: Black: TRUE, : FALSE age age subject (years) creat creatinine levels subject (mg/dL)","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/ckdepi_2009_egfr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates Estimated Glomerular Filtration Rate based on Sex, Race, Age, and Creatinine levels based on the CKDEPI 2009 equation — ckdepi_2009_egfr","text":"eGFR value (mL/min/1.73m2)","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/ckdepi_2009_egfr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates Estimated Glomerular Filtration Rate based on Sex, Race, Age, and Creatinine levels based on the CKDEPI 2009 equation — ckdepi_2009_egfr","text":"","code":"e <- ckdepi_2009_egfr(TRUE, TRUE, 24, 1)  df <- data.frame(    \"SEXF\" = c(TRUE, FALSE, TRUE, FALSE),    \"RACEB\" = c(FALSE, FALSE, TRUE, FALSE),    \"AGE\" = c(24, 24, 23, 24),    \"CREAT\" = c(1, 1, 2, 1)    ) df <- dplyr::mutate(df, egfr = ckdepi_2009_egfr(SEXF, RACEB, AGE, CREAT))"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/ckdepi_2021_egfr.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates eGFR with CKDEPI 2021 equation — ckdepi_2021_egfr","title":"Calculates eGFR with CKDEPI 2021 equation — ckdepi_2021_egfr","text":"Calculates eGFR CKDEPI 2021 equation","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/ckdepi_2021_egfr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates eGFR with CKDEPI 2021 equation — ckdepi_2021_egfr","text":"","code":"ckdepi_2021_egfr(sexf, age, creat, cystc)"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/ckdepi_2021_egfr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates eGFR with CKDEPI 2021 equation — ckdepi_2021_egfr","text":"sexf boolean representing patient female. age age patient years creat serum creatinine levels mg/dL. cystc serum cystain C levels mg/L.","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/ckdepi_2021_egfr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates eGFR with CKDEPI 2021 equation — ckdepi_2021_egfr","text":"eGFR mL/min/1.73 m^2","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/ckdepi_2021_egfr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates eGFR with CKDEPI 2021 equation — ckdepi_2021_egfr","text":"","code":"e <- ckdepi_2021_egfr(TRUE, 24, 1, 2)  df <- data.frame(    \"SEXF\" = c(TRUE, FALSE, TRUE, FALSE),    \"RACEB\" = c(FALSE, FALSE, TRUE, FALSE),    \"AGE\" = c(24, 24, 23, 24),    \"CREAT\" = c(1, 1, 2, 1),    \"CYSTC\" = c(0.4, 0.8, 1, 2)    ) df <- dplyr::mutate(df, egfr = ckdepi_2021_egfr(SEXF, AGE, CREAT, CYSTC))"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/crcl.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates Creatinine clearance with Cockcroft-Gault equation — crcl","title":"Calculates Creatinine clearance with Cockcroft-Gault equation — crcl","text":"Calculates Creatinine clearance Cockcroft-Gault equation","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/crcl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates Creatinine clearance with Cockcroft-Gault equation — crcl","text":"","code":"crcl(sexf, age, creat, weight)"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/crcl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates Creatinine clearance with Cockcroft-Gault equation — crcl","text":"sexf bool sex subject. Female: True, Male: False age age subject (years) creat serum creatinine levels (mg/dL) weight weight subject (kg)","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/crcl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates Creatinine clearance with Cockcroft-Gault equation — crcl","text":"CrCl (mL/min)","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/crcl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates Creatinine clearance with Cockcroft-Gault equation — crcl","text":"","code":"crcl(FALSE, 20, 10, 70) #> [1] 11.66667  df <- data.frame(   \"ID\" = c(1, 1, 1, 1, 2, 2, 2, 2),   \"SEX\" = c(\"F\", \"F\", \"F\", \"F\", \"M\", \"M\", \"M\", \"M\"),   \"RACE\" = c(\"WHITE\", \"WHITE\", \"WHITE\", \"WHITE\", \"BLACK\", \"BLACK\", \"BLACK\", \"BLACK\"),   \"AGE\" = c(24, 24, 24, 24, 22, 22, 22, 22),   \"CREAT\" = c(1, 1, 1, 1, 4, 4, 4, 4),   \"WEIGHT\" = c(70, 70, 70, 70, 65, 65, 65, 65) )  df <- df %>%   dplyr::group_by(ID) %>%   dplyr::mutate(CRCL = crcl(is_female(SEX), AGE, CREAT, WEIGHT))"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/create_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates the directory if it doesn't exist — create_dir","title":"Creates the directory if it doesn't exist — create_dir","text":"Creates directory exist","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/create_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates the directory if it doesn't exist — create_dir","text":"","code":"create_dir(path)"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/create_dir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates the directory if it doesn't exist — create_dir","text":"path path directory created","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/create_dir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates the directory if it doesn't exist — create_dir","text":"Nothing","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/create_dir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates the directory if it doesn't exist — create_dir","text":"","code":"if (FALSE) { # \\dontrun{ create_dir(\"derived/data/test\") } # }"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/cv.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes the coefficient of variation of input vector. — cv","title":"Computes the coefficient of variation of input vector. — cv","text":"Computes coefficient variation input vector.","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/cv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes the coefficient of variation of input vector. — cv","text":"","code":"cv(x, na.rm = FALSE)"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/cv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes the coefficient of variation of input vector. — cv","text":"x Input vector compute CV . na.rm boolean remove NA. default FALSE","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/cv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes the coefficient of variation of input vector. — cv","text":"CV x. Standard deviation divided mean. want % need multiply 100","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/cv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computes the coefficient of variation of input vector. — cv","text":"","code":"cv(c(1, 2, 1, 1, 2, 1, 2, 3)) #> [1] 0.4578608"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/dubois_bsa.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates Body Surface Area based on Weight and Height using Dubois Dubois equation — dubois_bsa","title":"Calculates Body Surface Area based on Weight and Height using Dubois Dubois equation — dubois_bsa","text":"Calculates Body Surface Area based Weight Height using Dubois Dubois equation","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/dubois_bsa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates Body Surface Area based on Weight and Height using Dubois Dubois equation — dubois_bsa","text":"","code":"dubois_bsa(weight, height)"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/dubois_bsa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates Body Surface Area based on Weight and Height using Dubois Dubois equation — dubois_bsa","text":"weight weight subject (kg) height height subject (cm)","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/dubois_bsa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates Body Surface Area based on Weight and Height using Dubois Dubois equation — dubois_bsa","text":"body surface area (m^2)","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/dubois_bsa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates Body Surface Area based on Weight and Height using Dubois Dubois equation — dubois_bsa","text":"","code":"#' b <- dubois_bsa(80.56, 167)  df <- data.frame( \"WT\" = c(80.56, 71.53, 81.04, 70.17), \"HT\" = c(167, 161, 163, 164) ) df <- dplyr::mutate(df, bsa = dubois_bsa(WT, HT))"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/egfr.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates eGFR based on the method specified — egfr","title":"Calculates eGFR based on the method specified — egfr","text":"Calculates eGFR based method specified","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/egfr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates eGFR based on the method specified — egfr","text":"","code":"egfr(sexf, raceb, age, creat, cystc, height, method = \"CKDEPI 2009\")"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/egfr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates eGFR based on the method specified — egfr","text":"sexf boolean representing patient female. raceb boolean representing patient black. age age patient years. creat serum creatinine levels mg/dL. cystc cystain C levels mg/L - used CKDEPI 2021 method height height patient cm. method string specifying method use. Available options \"CKDEPI 2009\", \"MDRD\", \"CKDEPI 2021\", \"Schwartz\".","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/egfr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates eGFR based on the method specified — egfr","text":"eGFR calculated based method.","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/egfr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates eGFR based on the method specified — egfr","text":"","code":"e <- egfr(TRUE, TRUE, 24, 1, \"CKDEPI 2009\")  df <- data.frame(    \"SEXF\" = c(TRUE, FALSE, TRUE, FALSE),    \"RACEB\" = c(FALSE, FALSE, TRUE, FALSE),    \"AGE\" = c(24, 24, 23, 24),    \"CREAT\" = c(1, 1, 2, 1)    ) df <- dplyr::mutate(df, egfr = egfr(SEXF, RACEB, AGE, CREAT, \"CKDEPI 2009\"))"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/ethnicn.html","id":null,"dir":"Reference","previous_headings":"","what":"Takes character input and returns standard yspec numeric value for Ethnic — ethnicn","title":"Takes character input and returns standard yspec numeric value for Ethnic — ethnicn","text":"Takes character input returns standard yspec numeric value Ethnic","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/ethnicn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Takes character input and returns standard yspec numeric value for Ethnic — ethnicn","text":"","code":"ethnicn(ethnicc)"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/ethnicn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Takes character input and returns standard yspec numeric value for Ethnic — ethnicn","text":"ethnicc Ethnic character","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/ethnicn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Takes character input and returns standard yspec numeric value for Ethnic — ethnicn","text":"standard yspec numeric value inputted Ethnic character","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/ethnicn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Takes character input and returns standard yspec numeric value for Ethnic — ethnicn","text":"","code":"ethnicn(\"HISPANIC OR LATINO\") # 1 #> [1] 1  ethnicn(\"NOT HISPANIC OR LATINO\") # 0 #> [1] 0  ethnicn(\"UNKNOWN\") # -999 #> [1] -999"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/geom_cv.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes the geometric CV of a vector x — geom_cv","title":"Computes the geometric CV of a vector x — geom_cv","text":"Computes geometric CV vector x","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/geom_cv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes the geometric CV of a vector x — geom_cv","text":"","code":"geom_cv(x, na.rm = FALSE)"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/geom_cv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes the geometric CV of a vector x — geom_cv","text":"x vector data want geometric CV . na.rm boolean remove NA vector. Default FALSE","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/geom_cv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes the geometric CV of a vector x — geom_cv","text":"geometric CV input vector x","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/geom_cv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computes the geometric CV of a vector x — geom_cv","text":"","code":"geom_cv(c(1, 2, 3, 2, 1)) #> [1] 0.5125099"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/geom_mean.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes the geometric mean of a vector. — geom_mean","title":"Computes the geometric mean of a vector. — geom_mean","text":"Computes geometric mean vector.","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/geom_mean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes the geometric mean of a vector. — geom_mean","text":"","code":"geom_mean(x, na.rm = FALSE)"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/geom_mean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes the geometric mean of a vector. — geom_mean","text":"x vector compute geometric mean na.rm boolean remove NA vector calcualtion. Default False","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/geom_mean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes the geometric mean of a vector. — geom_mean","text":"geometric mean input vector x","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/geom_mean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computes the geometric mean of a vector. — geom_mean","text":"","code":"geom_mean(c(1, 2, 3, 2, 1)) #> [1] 1.643752"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/geom_sd.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes the geometric standard deviation of a vector x. — geom_sd","title":"Computes the geometric standard deviation of a vector x. — geom_sd","text":"Computes geometric standard deviation vector x.","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/geom_sd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes the geometric standard deviation of a vector x. — geom_sd","text":"","code":"geom_sd(x, na.rm = FALSE)"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/geom_sd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes the geometric standard deviation of a vector x. — geom_sd","text":"x vector data want geometric sd . na.rm boolean remove NA values. Default False","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/geom_sd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes the geometric standard deviation of a vector x. — geom_sd","text":"geometric standard deviation x","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/geom_sd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computes the geometric standard deviation of a vector x. — geom_sd","text":"","code":"geom_sd(c(1, 2, 3, 2, 1)) #> [1] 1.620824"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/get_unique_units_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a dataframe with distinct parameters and units combinations — get_unique_units_df","title":"Creates a dataframe with distinct parameters and units combinations — get_unique_units_df","text":"Creates dataframe distinct parameters units combinations","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/get_unique_units_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a dataframe with distinct parameters and units combinations — get_unique_units_df","text":"","code":"get_unique_units_df(params, units)"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/get_unique_units_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a dataframe with distinct parameters and units combinations — get_unique_units_df","text":"params column dataset lab parameters units column dataset units associated parameters","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/get_unique_units_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a dataframe with distinct parameters and units combinations — get_unique_units_df","text":"dataframe distinct units parameters IU replaced U mu replaced u","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/get_unique_units_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates a dataframe with distinct parameters and units combinations — get_unique_units_df","text":"","code":"df <- data.frame(   PARAM = c(     \"ALB\",\"ALT\",\"AST\",\"CR\",\"TBIL\",     \"ALB\",\"CR\",\"TBIL\",\"ALT\",\"AST\"),   UNIT = c(     \"g/L\",\"U/L\",\"U/L\",\"umol/L\",\"umol/L\",     \"U/L\",\"μmol/L\",\"μmol/L\",\"IU/L\",\"IU/L\") ) unique_df <- get_unique_units_df(df$PARAM, df$UNIT)"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/is_asian.html","id":null,"dir":"Reference","previous_headings":"","what":"Takes character input and returns TRUE/FALSE if asian/other — is_asian","title":"Takes character input and returns TRUE/FALSE if asian/other — is_asian","text":"Takes character input returns TRUE/FALSE asian/","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/is_asian.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Takes character input and returns TRUE/FALSE if asian/other — is_asian","text":"","code":"is_asian(x)"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/is_asian.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Takes character input and returns TRUE/FALSE if asian/other — is_asian","text":"x input character representing race","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/is_asian.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Takes character input and returns TRUE/FALSE if asian/other — is_asian","text":"boolean representing Race == Asian","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/is_asian.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Takes character input and returns TRUE/FALSE if asian/other — is_asian","text":"","code":"is_asian(\"ASIAN\") #> [1] TRUE  is_asian(\"BLACK\") #> [1] FALSE"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/is_black.html","id":null,"dir":"Reference","previous_headings":"","what":"Takes character input and returns TRUE/FALSE if black/other also checks for ","title":"Takes character input and returns TRUE/FALSE if black/other also checks for ","text":"Takes character input returns TRUE/FALSE black/also checks \"African American\" \"Black African American\"","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/is_black.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Takes character input and returns TRUE/FALSE if black/other also checks for ","text":"","code":"is_black(x)"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/is_black.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Takes character input and returns TRUE/FALSE if black/other also checks for ","text":"x input character representing race","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/is_black.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Takes character input and returns TRUE/FALSE if black/other also checks for ","text":"boolean representing Race == Black","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/is_black.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Takes character input and returns TRUE/FALSE if black/other also checks for ","text":"","code":"is_black(\"WHITE\") #> [1] FALSE  is_black(c(\"AFRICAN AMERICAN\", \"BLACK\")) #> [1] TRUE TRUE"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/is_female.html","id":null,"dir":"Reference","previous_headings":"","what":"Takes character input and returns TRUE/FALSE if female/male — is_female","title":"Takes character input and returns TRUE/FALSE if female/male — is_female","text":"Takes character input returns TRUE/FALSE female/male","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/is_female.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Takes character input and returns TRUE/FALSE if female/male — is_female","text":"","code":"is_female(x)"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/is_female.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Takes character input and returns TRUE/FALSE if female/male — is_female","text":"x input character representing female male","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/is_female.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Takes character input and returns TRUE/FALSE if female/male — is_female","text":"boolean representing female","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/is_female.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Takes character input and returns TRUE/FALSE if female/male — is_female","text":"","code":"is_female(\"F\") #> [1] TRUE  is_female(c(\"MALE\", \"FEMALE\")) #> [1] FALSE  TRUE"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/is_hispanic_or_latino.html","id":null,"dir":"Reference","previous_headings":"","what":"Takes character input and returns TRUE/FALSE if ","title":"Takes character input and returns TRUE/FALSE if ","text":"Takes character input returns TRUE/FALSE \"Hispanic Latino\" ","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/is_hispanic_or_latino.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Takes character input and returns TRUE/FALSE if ","text":"","code":"is_hispanic_or_latino(x)"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/is_hispanic_or_latino.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Takes character input and returns TRUE/FALSE if ","text":"x input character representing ethnicity","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/is_hispanic_or_latino.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Takes character input and returns TRUE/FALSE if ","text":"boolean representing Ethnic == \"Hispanic Latino\"","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/is_hispanic_or_latino.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Takes character input and returns TRUE/FALSE if ","text":"","code":"is_hispanic_or_latino(\"HISPANIC OR LATINO\") #> [1] TRUE  is_hispanic_or_latino(\"NOT HISPANIC OR LATINO\") #> [1] FALSE  is_hispanic_or_latino(\"UNKNOWN\") #> [1] FALSE"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/is_not_hispanic_or_latino.html","id":null,"dir":"Reference","previous_headings":"","what":"Takes character input and returns TRUE/FALSE if ","title":"Takes character input and returns TRUE/FALSE if ","text":"Takes character input returns TRUE/FALSE \"Hispanic Latino\" ","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/is_not_hispanic_or_latino.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Takes character input and returns TRUE/FALSE if ","text":"","code":"is_not_hispanic_or_latino(x)"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/is_not_hispanic_or_latino.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Takes character input and returns TRUE/FALSE if ","text":"x input character representing ethnicity","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/is_not_hispanic_or_latino.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Takes character input and returns TRUE/FALSE if ","text":"boolean representing Ethnic == \"Hispanic Latino\"","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/is_not_hispanic_or_latino.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Takes character input and returns TRUE/FALSE if ","text":"","code":"is_not_hispanic_or_latino(\"HISPANIC OR LATINO\") #> [1] FALSE  is_not_hispanic_or_latino(\"NOT HISPANIC OR LATINO\") #> [1] TRUE  is_not_hispanic_or_latino(\"UNKNOWN\") #> [1] FALSE"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/is_other.html","id":null,"dir":"Reference","previous_headings":"","what":"Takes character input and returns TRUE/FALSE if other/explicit race — is_other","title":"Takes character input and returns TRUE/FALSE if other/explicit race — is_other","text":"Takes character input returns TRUE/FALSE /explicit race","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/is_other.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Takes character input and returns TRUE/FALSE if other/explicit race — is_other","text":"","code":"is_other(x)"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/is_other.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Takes character input and returns TRUE/FALSE if other/explicit race — is_other","text":"x input character representing race","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/is_other.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Takes character input and returns TRUE/FALSE if other/explicit race — is_other","text":"boolean representing Race == ","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/is_other.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Takes character input and returns TRUE/FALSE if other/explicit race — is_other","text":"","code":"is_other(\"OTHER\") #> [1] TRUE  is_other(\"BLACK\") #> [1] FALSE"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/is_white.html","id":null,"dir":"Reference","previous_headings":"","what":"Takes character input and returns TRUE/FALSE if white/other — is_white","title":"Takes character input and returns TRUE/FALSE if white/other — is_white","text":"Takes character input returns TRUE/FALSE white/","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/is_white.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Takes character input and returns TRUE/FALSE if white/other — is_white","text":"","code":"is_white(x)"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/is_white.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Takes character input and returns TRUE/FALSE if white/other — is_white","text":"x input character representing race","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/is_white.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Takes character input and returns TRUE/FALSE if white/other — is_white","text":"boolean representing Race == White","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/is_white.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Takes character input and returns TRUE/FALSE if white/other — is_white","text":"","code":"is_white(\"WHITE\") #> [1] TRUE  is_white(\"BLACK\") #> [1] FALSE"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/mdrd_egfr.html","id":null,"dir":"Reference","previous_headings":"","what":"Modification of Diet in Renal Disease eGFR calculation — mdrd_egfr","title":"Modification of Diet in Renal Disease eGFR calculation — mdrd_egfr","text":"Modification Diet Renal Disease eGFR calculation","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/mdrd_egfr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modification of Diet in Renal Disease eGFR calculation — mdrd_egfr","text":"","code":"mdrd_egfr(sexf, raceb, age, creat)"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/mdrd_egfr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modification of Diet in Renal Disease eGFR calculation — mdrd_egfr","text":"sexf boolean representing patient female. raceb boolean representing patient black. age age patient years creat serum creatinine levels mg/dL","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/mdrd_egfr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Modification of Diet in Renal Disease eGFR calculation — mdrd_egfr","text":"eGFR mL/min/1.73 m^2","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/mdrd_egfr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Modification of Diet in Renal Disease eGFR calculation — mdrd_egfr","text":"","code":"e <- mdrd_egfr(TRUE, TRUE, 24, 1)  df <- data.frame(    \"SEXF\" = c(TRUE, FALSE, TRUE, FALSE),    \"RACEB\" = c(FALSE, FALSE, TRUE, FALSE),    \"AGE\" = c(24, 24, 23, 24),    \"CREAT\" = c(1, 1, 2, 1)    ) df <- dplyr::mutate(df, egfr = mdrd_egfr(SEXF, RACEB, AGE, CREAT))"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/mosteller_bsa.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates Body Surface Area based on Weight and Height using Mosteller equation — mosteller_bsa","title":"Calculates Body Surface Area based on Weight and Height using Mosteller equation — mosteller_bsa","text":"Calculates Body Surface Area based Weight Height using Mosteller equation","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/mosteller_bsa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates Body Surface Area based on Weight and Height using Mosteller equation — mosteller_bsa","text":"","code":"mosteller_bsa(weight, height)"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/mosteller_bsa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates Body Surface Area based on Weight and Height using Mosteller equation — mosteller_bsa","text":"weight weight subject (kg) height height subject (cm)","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/mosteller_bsa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates Body Surface Area based on Weight and Height using Mosteller equation — mosteller_bsa","text":"body surface area (m^2)","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/mosteller_bsa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates Body Surface Area based on Weight and Height using Mosteller equation — mosteller_bsa","text":"","code":"mosteller_bsa(70, 170) #> [1] 1.818119"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/racen.html","id":null,"dir":"Reference","previous_headings":"","what":"Takes character input and returns standard yspec numeric value for Race — racen","title":"Takes character input and returns standard yspec numeric value for Race — racen","text":"Takes character input returns standard yspec numeric value Race","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/racen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Takes character input and returns standard yspec numeric value for Race — racen","text":"","code":"racen(racec)"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/racen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Takes character input and returns standard yspec numeric value for Race — racen","text":"racec Race character","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/racen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Takes character input and returns standard yspec numeric value for Race — racen","text":"standard yspec numeric value inputted Race character","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/racen.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Takes character input and returns standard yspec numeric value for Race — racen","text":"","code":"racen(\"WHITE\") # 1 #> [1] 1  racen(\"BLACK\") # 2 #> [1] 2  racen(\"ASIAN\") # 3 #> [1] 3  racen(\"OTHER\") # 4 #> [1] 4  racen(\"UNKNOWN\") # -999 #> [1] -999"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/read_csv_with_hash.html","id":null,"dir":"Reference","previous_headings":"","what":"Reads data from csv file and prints hash of contents. — read_csv_with_hash","title":"Reads data from csv file and prints hash of contents. — read_csv_with_hash","text":"Reads data csv file prints hash contents.","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/read_csv_with_hash.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reads data from csv file and prints hash of contents. — read_csv_with_hash","text":"","code":"read_csv_with_hash(csv_file_path, ...)"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/read_csv_with_hash.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reads data from csv file and prints hash of contents. — read_csv_with_hash","text":"csv_file_path path csv file ingest ... additional arguments digest read_csv","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/read_csv_with_hash.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reads data from csv file and prints hash of contents. — read_csv_with_hash","text":"dataframe data within file","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/read_csv_with_hash.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reads data from csv file and prints hash of contents. — read_csv_with_hash","text":"","code":"if (FALSE) { # \\dontrun{ read_csv_with_hash(\"data/derived/example_data.csv\") } # }"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/read_file_with_hash.html","id":null,"dir":"Reference","previous_headings":"","what":"Reads the data from a file (csv or parquet) and prints the hash — read_file_with_hash","title":"Reads the data from a file (csv or parquet) and prints the hash — read_file_with_hash","text":"Reads data file (csv parquet) prints hash","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/read_file_with_hash.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reads the data from a file (csv or parquet) and prints the hash — read_file_with_hash","text":"","code":"read_file_with_hash(file_path, ...)"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/read_file_with_hash.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reads the data from a file (csv or parquet) and prints the hash — read_file_with_hash","text":"file_path path data file ... additional arguments digest, read_csv, read_parquet, read_sas, read_pzfx","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/read_file_with_hash.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reads the data from a file (csv or parquet) and prints the hash — read_file_with_hash","text":"data within supplied file","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/read_file_with_hash.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reads the data from a file (csv or parquet) and prints the hash — read_file_with_hash","text":"","code":"if (FALSE) { # \\dontrun{ dat <- read_file_with_hash(\"data/derived/PK_data.parquet\") dat2 <- read_file_with_hash(\"data/source/data.csv\") } # }"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/read_hashed_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Reads a file if the supplied hash matches the file's hash — read_hashed_file","title":"Reads a file if the supplied hash matches the file's hash — read_hashed_file","text":"Reads file supplied hash matches file's hash","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/read_hashed_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reads a file if the supplied hash matches the file's hash — read_hashed_file","text":"","code":"read_hashed_file(file_path, hash, ...)"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/read_hashed_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reads a file if the supplied hash matches the file's hash — read_hashed_file","text":"file_path path file data want read hash hash expect file ... additional arguments digest read_csv, parquet, sas","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/read_hashed_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reads a file if the supplied hash matches the file's hash — read_hashed_file","text":"data object contents file_path","code":""},{"path":[]},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/read_parquet_with_hash.html","id":null,"dir":"Reference","previous_headings":"","what":"Reads data from parquet file and prints hash of contents. — read_parquet_with_hash","title":"Reads data from parquet file and prints hash of contents. — read_parquet_with_hash","text":"Reads data parquet file prints hash contents.","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/read_parquet_with_hash.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reads data from parquet file and prints hash of contents. — read_parquet_with_hash","text":"","code":"read_parquet_with_hash(parquet_file_path, ...)"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/read_parquet_with_hash.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reads data from parquet file and prints hash of contents. — read_parquet_with_hash","text":"parquet_file_path path parquet file ingest ... additional arguments digest read_parquet","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/read_parquet_with_hash.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reads data from parquet file and prints hash of contents. — read_parquet_with_hash","text":"tibble data within file","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/read_parquet_with_hash.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reads data from parquet file and prints hash of contents. — read_parquet_with_hash","text":"","code":"if (FALSE) { # \\dontrun{ read_parquet_with_hash(\"data/derived/example_data.parquet\") } # }"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/read_pzfx_with_hash.html","id":null,"dir":"Reference","previous_headings":"","what":"Reads in table from a prism pzfx file. — read_pzfx_with_hash","title":"Reads in table from a prism pzfx file. — read_pzfx_with_hash","text":"Reads table prism pzfx file.","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/read_pzfx_with_hash.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reads in table from a prism pzfx file. — read_pzfx_with_hash","text":"","code":"read_pzfx_with_hash(pzfx_file_path, ...)"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/read_pzfx_with_hash.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reads in table from a prism pzfx file. — read_pzfx_with_hash","text":"pzfx_file_path path pzfx file ... additional arguments digest read_pzfx","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/read_pzfx_with_hash.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reads in table from a prism pzfx file. — read_pzfx_with_hash","text":"data within table pzfx file","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/read_pzfx_with_hash.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reads in table from a prism pzfx file. — read_pzfx_with_hash","text":"","code":"if (FALSE) { # \\dontrun{ read_pzfx_with_hash(\"mydata.pzfx\", table = \"experiment1\") } # }"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/read_sas_with_hash.html","id":null,"dir":"Reference","previous_headings":"","what":"Reads data from sas file and prints hash of contents. — read_sas_with_hash","title":"Reads data from sas file and prints hash of contents. — read_sas_with_hash","text":"Reads data sas file prints hash contents.","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/read_sas_with_hash.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reads data from sas file and prints hash of contents. — read_sas_with_hash","text":"","code":"read_sas_with_hash(sas_file_path, ...)"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/read_sas_with_hash.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reads data from sas file and prints hash of contents. — read_sas_with_hash","text":"sas_file_path path sas file ingest ... additional arguments digest read_sas","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/read_sas_with_hash.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reads data from sas file and prints hash of contents. — read_sas_with_hash","text":"dataframe(?) data within file","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/read_sas_with_hash.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reads data from sas file and prints hash of contents. — read_sas_with_hash","text":"","code":"if (FALSE) { # \\dontrun{ read_sas_with_hash(\"data/source/example.sas7bdat\") } # }"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/schwartz_egfr.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates eGFR based on Schwartz' equation — schwartz_egfr","title":"Calculates eGFR based on Schwartz' equation — schwartz_egfr","text":"Calculates eGFR based Schwartz' equation","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/schwartz_egfr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates eGFR based on Schwartz' equation — schwartz_egfr","text":"","code":"schwartz_egfr(height, creat)"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/schwartz_egfr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates eGFR based on Schwartz' equation — schwartz_egfr","text":"height height patients cm. creat Serum creatinine levels mg/dL","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/schwartz_egfr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates eGFR based on Schwartz' equation — schwartz_egfr","text":"eGFR mL/min/1.73m^2","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/schwartz_egfr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates eGFR based on Schwartz' equation — schwartz_egfr","text":"","code":"schwartz_egfr(100, 1) #> [1] 41.3"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/sexf.html","id":null,"dir":"Reference","previous_headings":"","what":"Takes character input and returns standard yspec numeric value for Sex. — sexf","title":"Takes character input and returns standard yspec numeric value for Sex. — sexf","text":"Also returns numeric single character Sex characters \"F\" \"M\"","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/sexf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Takes character input and returns standard yspec numeric value for Sex. — sexf","text":"","code":"sexf(sex)"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/sexf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Takes character input and returns standard yspec numeric value for Sex. — sexf","text":"sex Sex character","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/sexf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Takes character input and returns standard yspec numeric value for Sex. — sexf","text":"standard yspec numeric value inputted Sex character","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/sexf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Takes character input and returns standard yspec numeric value for Sex. — sexf","text":"","code":"sexf(\"FEMALE\") # 1 #> [1] 1 sexf(\"female\") # 1 #> [1] 1 sexf(\"f\") # 1 #> [1] 1  sexf(\"MALE\") # 0 #> [1] 0  sexf(\"NOT SPECIFIED\") # 0 #> [1] 0"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/write_csv_with_hash.html","id":null,"dir":"Reference","previous_headings":"","what":"Writes data to csv_path with na_value replacing NA values. — write_csv_with_hash","title":"Writes data to csv_path with na_value replacing NA values. — write_csv_with_hash","text":"Writes data csv_path na_value replacing NA values.","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/write_csv_with_hash.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Writes data to csv_path with na_value replacing NA values. — write_csv_with_hash","text":"","code":"write_csv_with_hash(data, csv_path, ...)"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/write_csv_with_hash.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Writes data to csv_path with na_value replacing NA values. — write_csv_with_hash","text":"data data object write file csv_path file path save csv ... additional arguments digest write_csv","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/write_csv_with_hash.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Writes data to csv_path with na_value replacing NA values. — write_csv_with_hash","text":"Nothing, creates csv_path file prints hash file","code":""},{"path":[]},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/write_file_with_hash.html","id":null,"dir":"Reference","previous_headings":"","what":"Writes data to path, if directory doesn't exist it is created before file is written — write_file_with_hash","title":"Writes data to path, if directory doesn't exist it is created before file is written — write_file_with_hash","text":"Writes data path, directory exist created file written","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/write_file_with_hash.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Writes data to path, if directory doesn't exist it is created before file is written — write_file_with_hash","text":"","code":"write_file_with_hash(data, path, overwrite = FALSE, ...)"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/write_file_with_hash.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Writes data to path, if directory doesn't exist it is created before file is written — write_file_with_hash","text":"data data object write file path destination file (csv parquet) overwrite boolean whether overwrite . ... additional arguments digest write_file.","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/write_file_with_hash.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Writes data to path, if directory doesn't exist it is created before file is written — write_file_with_hash","text":"Nothing, File created hash created file printed","code":""},{"path":[]},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/write_parquet_with_hash.html","id":null,"dir":"Reference","previous_headings":"","what":"Writes data to parquet_path and prints hash — write_parquet_with_hash","title":"Writes data to parquet_path and prints hash — write_parquet_with_hash","text":"Writes data parquet_path prints hash","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/write_parquet_with_hash.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Writes data to parquet_path and prints hash — write_parquet_with_hash","text":"","code":"write_parquet_with_hash(data, parquet_path, ...)"},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/write_parquet_with_hash.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Writes data to parquet_path and prints hash — write_parquet_with_hash","text":"data data object save parquet_path parquet_path path desired parquet destination ... additional arguments digest write_parquet","code":""},{"path":"https://potential-broccoli-9pe6wkn.pages.github.io/reference/write_parquet_with_hash.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Writes data to parquet_path and prints hash — write_parquet_with_hash","text":"Nothing. creates parquet_path file prints hash","code":""},{"path":[]}]
